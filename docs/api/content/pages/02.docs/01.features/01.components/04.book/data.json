{"attributes":{"title":"Book"},"body":"The _Book_ Component is a simple structure for rendering a book in its entirety. Like other components, the Book-template will be at the top of the hierarchy of Pages. Following that, you can group chapters in their own folders and use the Chapter-template, and below that each Page will have its own folder and use the Page-template.\r\n\r\n## An example\r\n\r\nThe [sample Book](https://github.com/OleVik/grav-skeleton-scholar/tree/master/user/pages/07.book), \"The Hound of the Baskervilles\" by Sir Arthur Conan Doyle, has the following structure:\r\n\r\n```\r\nuser/pages/07.book\r\n|   book.md\r\n|   cover.jpg\r\n|\r\n+---01.mr-sherlock-holmes\r\n|   |   chapter.md\r\n|   |\r\n|   +---1.1\r\n|   |       page.md\r\n|   |\r\n|   +---2.2\r\n|   |       page.md\r\n|   |\r\n|   +---3.3\r\n|   |       page.md\r\n|   |\r\n|   +---4.4\r\n|   |       page.md\r\n|   |\r\n|   +---5.5\r\n|   |       page.md\r\n|   |\r\n|   +---6.6\r\n|   |       page.md\r\n|   |\r\n|   +---7.7\r\n|   |       page.md\r\n|   |\r\n|   +---8.8\r\n|   |       page.md\r\n|   |\r\n|   \\---9.9\r\n|           page.md\r\n...\r\n```\r\n\r\nBoth the Book and Chapter can use the `subtitle`-property, but otherwise requires very little metadata in the FrontMatter. Pages will be grouped and rendered by the templates. Only the `book.md`- and `chapter.md`-files need to contain FrontMatter, all `page.md`-files can only Markdown, as the Page-number within the Chapter will be used as the title.\r\n\r\n## Ordering Pages in the Book\r\n\r\nIt is important that you explicitly change how Pages should be ordered, if you are not utilising [Grav's natural ordering](https://learn.getgrav.org/16/content/content-pages#folders). This looks at the folder-names and checks whether any integer follow by a period, eg. `01.folder-name`, is used. This is a simple way to ensure that Chapters and Pages appear in the order you expect them to. But there are many other [ordering options](https://learn.getgrav.org/16/content/collections#ordering-options) that can be used, just pass the parameters in the FrontMatter:\r\n\r\n```yaml\r\ncontent:\r\n  order:\r\n    by: folder\r\n    dir: asc\r\n```\r\n\r\n## Book Cover\r\n\r\nBy setting the `image`-property in the FrontMatter, you can link to an image to display as the Book Cover. You can also assign taxonomies as usual, and specify a print-logic for the special `/print`-route.\r\n\r\n```yaml\r\ntitle: \"The Hound of the Baskervilles\"\r\nmenu: \"Book\"\r\nimage: \"cover.jpg\"\r\ntaxonomy:\r\n  categories: fiction\r\n  tags: [book]\r\n  author:\r\n    - name: \"Sir Arthur Conan Doyle\"\r\n      affiliation: \"Farkas Translations, ManyBooks.net\"\r\nprint:\r\n  items: \"@self.descendants\"\r\n  order:\r\n    by: 'folder'\r\n    dir: 'asc'\r\n  process: true\r\n```\r\n\r\n![Index](image://breakpoints.spec.js/992/book.png)\r\n","bodyBegin":5,"frontmatter":"title: Book"}