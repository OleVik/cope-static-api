{"attributes":{"title":"Development"},"body":"The scripts in `package.json` cover most front-end development tasks:\r\n\r\n- `theme`: Watches and compiles the common CSS for the theme's structure\r\n- `base`: Watches and compiles all Styles if the base changes\r\n- `styles`: Watches and compiles each Style if it changes\r\n- `print`: Compiles Print-CSS\r\n- `css`: Run all of the above at once\r\n- `scripts:babel`: Compile JS with Babel\r\n- `scripts:watch`: Watch and compile JS with Parcel\r\n- `scripts:build`: Compile JS with Parcel\r\n- `test`: Test front-end accessibility with Cypress\r\n\r\nAll of these requires development-packages being installed through `npm install`. PostCSS is used for compiling all CSS. The source for CSS- and JS-files are in `/src`.\r\n\r\n## PHP Code Standards\r\n\r\nThis plugin follows PSR-1, PSR-2, and PEAR coding standards, as well as PSR-4.\r\n\r\n### Extending\r\n\r\nAs demonstrated by the API-options, you can fairly easily extend the PHP-behavior of the plugin. Extensions to the theme's API must use the namespace `Grav\\Theme\\Scholar`.\r\n\r\n## Customizing blueprints\r\n\r\nYour Theme or Skeleton can extend or copy from the blueprints in `/blueprints/partials` to create custom blueprints.\r\n","bodyBegin":5,"frontmatter":"title: Development"}